A.1
Say that a lift is serving a tower with x levels / floors, and it does have a maximum capacity of y passengers to have at the same moment. The assumed goal is to serve the lift users with the minimum time while they are waiting outside the elevator or being transported inside it. The outcome is to find the best equation to pick-up and drop everyone with the shortest overall time.
The system mission would be to build a priority list of whom the users to pick-up or drop first, considering the calculation of the user already-waited time at a certain point and the time needed to reach his / her floor and pick them up or drop them (including the lift’s door movement time + average waiting time while passengers are boarding or getting-off), which involve exploring every possible scenario of routes and stops to be made before serving each individual (which should also take in account the capacity y and the trip(s) to drop passenger(s) before picking-up new ones). That list is to be rebuilt whenever a new person reaches the elevator to use, or even when someone drop boarding the lift (e.g., to use staircase or go back wherever they came from).
It is not possible to decide which is more efficient, whether to serve single individuals with regardless of them being grouped in x levels (like the elevator to make a stop and state how many should hop-on e.g., 1st person only or 1st and 2nd …etc.), or to make the calculation based on the floor groups (which may replace single person already-waited time with group average already-waited time). The system may include a function to collect the data and occasionally, figure and decide which is more efficient and do adapt it (maybe based on rush / non-rush hours or weekday / weekends …etc.).
System could also be programmed to include more possible scenarios like having baby stroller or a heavy object to be transported by the lift, and so it might implicate the available space or weight beside the number of users.
